name: Android Release

# 1
on:
  # 2
  # push:
  #   branches: [ "master" ]
  # pull_request:
  #   branches: [ "master" ]
  release:
    branches: [ "master" ]
  # 3
  workflow_dispatch:

# 4
jobs:
  # 5
  build:
  #release:
    # 6
    runs-on: ubuntu-latest

    # 7
    steps:
      # 8
      - uses: actions/checkout@v3
      # 9
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
      # 10   
      - uses: subosito/flutter-action@v2
        with:
          # 11
          # flutter-version: "3.0.0"
          channel: 'stable'
      # 12
      - name: Get dependencies
        run: flutter pub get

      # Runs a set of commands using the runners shell
      - name: Start release build
        run: flutter build appbundle

      - run: flutter build apk
      # - run: flutter build apk --release --split-per-abi
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk

      - name: Fetch action
        id: pl
        uses: Rishabh510/Path-lister-action@master
        with:
          path: "build/app/outputs/apk/release/"
          #type: ".yml"

      - name: Output results
        run: |
          echo "Found ${{ steps.pl.outputs.path_count }} file(s) with this extension:"
          for i in ${{ steps.pl.outputs.paths }}; do
          echo $i
          done
      - name: Upload to release
        uses: JasonEtco/upload-to-release@master
        with:
          args: build/app/outputs/apk/release//app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - uses: Shopify/upload-to-release@master
      #   with:
      #     name: my-artifact
      #     path: build/app/outputs/apk/release/app-release.apk
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      #     #content-type: text/plain # Optional

      # - name: Setup semantic-release
      #   run: npm install

      # - name: Release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: npm exec semantic-release

      # - name: Releasing using Hub
      #   uses: r0user/release-apk@main
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     APP_FOLDER: app